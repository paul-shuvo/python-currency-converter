# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main  

# strategy:
#   matrix:
#     'Ubuntu 20.04 py36':
#       image: 'ubuntu-20.04'
#       python.version: '3.6'
#     'Ubuntu 20.04 py37':
#       image: 'ubuntu-20.04'
#       python.version: '3.7'
#     'Ubuntu 20.04 py38':
#       image: 'ubuntu-20.04'
#       python.version: '3.8'
#     'Ubuntu 18.04 py36':
#       image: 'ubuntu-18.04'
#       python.version: '3.6'
#     'Ubuntu 18.04 py37':
#       image: 'ubuntu-18.04'
#       python.version: '3.7'
#     'Ubuntu 18.04 py38':
#       image: 'ubuntu-18.04'
#       python.version: '3.8'
#     'MacOS Latest py36':
#       image: 'macos-latest'
#       python.version: '3.6'
#     'MacOS Latest py37':
#       image: 'macos-latest'
#       python.version: '3.7'
#     'MacOS Latest py38':
#       image: 'macos-latest'
#       python.version: '3.8'
#     'Windows Latest py36':
#       image: 'windows-latest'
#       python.version: '3.6'
#     'Windows Latest py37':
#       image: 'windows-latest'
#       python.version: '3.7'
#     'Windows Latest py38':
#       image: 'windows-latest'
#       python.version: '3.8'

# pool:
#   vmImage: $(image)

pool:
  vmImage: 'windows-latest'

strategy:
  matrix:
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'
    Python38:
      python.version: '3.8'
    Python39:
      python.version: '3.9'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'

- script: |
    pip install coverage
    coverage run -m pytest
    coverage report -m
    coverage html
